<% include ./partials/header.ejs %>
<div class="w-full min-h-screen bg-black text-white">
  <!-- Header -->
  <div class="sticky top-0 z-10 bg-black bg-opacity-80 backdrop-blur-sm flex justify-between items-center p-4 border-b border-gray-800">
    <a href="/profile" class="text-blue-500"><i class="ri-arrow-left-line"></i></a>
    <h2 class="font-semibold">New Post</h2>
    <a href="/feed" class="text-blue-500"><i class="ri-home-line"></i></a>
  </div>

  <!-- Upload Area -->
  <div class="flex flex-col items-center justify-center py-10 px-4">
    <div class="relative w-full max-w-md aspect-square border-2 border-dashed border-gray-700 rounded-lg flex items-center justify-center mb-6" id="previewContainer">
      <i class="ri-image-line text-5xl text-gray-500"></i>
      <img id="imagePreview" class="absolute inset-0 w-full h-full object-contain hidden" src="" alt="Preview">
    </div>
    
    <button id="selectPicBtn" class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-6 rounded-lg mb-8 transition">
      Select from gallery
    </button>
  </div>

  <!-- Post/Story Toggle -->
  <div class="flex border-b border-gray-800">
    <button id="postTab" class="flex-1 py-3 text-center font-medium border-b-2 border-white">
      Post
    </button>
    <button id="storyTab" class="flex-1 py-3 text-center text-gray-500 font-medium">
      Story
    </button>
  </div>

  <!-- Caption Form -->
  <form id="uploadForm" action="/post" enctype="multipart/form-data" method="post" class="p-4">
    <input type="hidden" name="category" value="post" id="categoryInput">
    <input type="file" id="imageInput" name="image" accept="image/*" hidden required>
    
    <div class="mb-4">
      <textarea 
        name="caption" 
        class="w-full bg-black text-white border-b border-gray-800 py-2 px-1 focus:outline-none focus:border-gray-600 resize-none" 
        placeholder="Write a caption..."
        rows="3"
      ></textarea>
    </div>
    
    <div class="flex items-center justify-between text-gray-500 text-sm mb-6">
      <div class="flex items-center">
        <i class="ri-emotion-line mr-2"></i>
        <i class="ri-map-pin-line mr-2"></i>
        <i class="ri-user-smile-line"></i>
      </div>
      <span id="charCount">0/2,200</span>
    </div>
    
    <button 
      type="submit" 
      class="w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition"
      id="submitBtn"
      disabled
    >
      Share
    </button>
  </form>
</div>

<script>
  // DOM Elements
  const imageInput = document.getElementById('imageInput');
  const imagePreview = document.getElementById('imagePreview');
  const previewContainer = document.getElementById('previewContainer');
  const selectPicBtn = document.getElementById('selectPicBtn');
  const postTab = document.getElementById('postTab');
  const storyTab = document.getElementById('storyTab');
  const categoryInput = document.getElementById('categoryInput');
  const captionTextarea = document.querySelector('textarea[name="caption"]');
  const charCount = document.getElementById('charCount');
  const submitBtn = document.getElementById('submitBtn');
  const uploadForm = document.getElementById('uploadForm');

  // Event Listeners
  selectPicBtn.addEventListener('click', () => imageInput.click());
  
  imageInput.addEventListener('change', function(e) {
    if (e.target.files.length > 0) {
      const file = e.target.files[0];
      const reader = new FileReader();
      
      reader.onload = function(event) {
        imagePreview.src = event.target.result;
        imagePreview.classList.remove('hidden');
        previewContainer.querySelector('i').classList.add('hidden');
        submitBtn.disabled = false;
      };
      
      reader.readAsDataURL(file);
    }
  });

  // Tab switching
  postTab.addEventListener('click', () => {
    postTab.classList.add('border-white', 'text-white');
    postTab.classList.remove('text-gray-500');
    storyTab.classList.add('text-gray-500');
    storyTab.classList.remove('border-white', 'text-white');
    categoryInput.value = 'post';
  });

  storyTab.addEventListener('click', () => {
    storyTab.classList.add('border-white', 'text-white');
    storyTab.classList.remove('text-gray-500');
    postTab.classList.add('text-gray-500');
    postTab.classList.remove('border-white', 'text-white');
    categoryInput.value = 'story';
  });

  // Character count
  captionTextarea.addEventListener('input', function() {
    const currentLength = this.value.length;
    charCount.textContent = `${currentLength}/2,200`;
    
    if (currentLength > 2200) {
      charCount.classList.add('text-red-500');
    } else {
      charCount.classList.remove('text-red-500');
    }
  });

  // Form submission feedback
  uploadForm.addEventListener('submit', function() {
    submitBtn.disabled = true;
    submitBtn.textContent = 'Sharing...';
  });
</script>
<% include ./partials/footer.ejs %>